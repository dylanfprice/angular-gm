/**
 * AngularGM - Google Maps Directives for AngularJS
 * @version v0.2.0 - 2013-09-09
 * @link http://dylanfprice.github.com/angular-gm
 * @author Dylan Price <the.dylan.price@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"use strict";!function(){angular.module("AngularGM",[]).value("angulargmDefaults",{precision:3,markerConstructor:google.maps.Marker,polylineConstructor:google.maps.Polyline,mapOptions:{zoom:8,center:new google.maps.LatLng(46,-120),mapTypeId:google.maps.MapTypeId.ROADMAP}})}(),function(){angular.module("AngularGM").directive("gmInfoWindow",["$parse","$compile","$timeout","angulargmUtils",function(a,b,c,d){function e(d,e,g){var h=angular.extend({},d.$eval(g.gmInfoWindowOptions));h.content=e[0];var i=a(g.gmInfoWindow),j=i(d);j||(j=new google.maps.InfoWindow(h),i.assign(d,j));var k=f(g);angular.forEach(k,function(a,b){google.maps.event.addListener(j,b,function(){c(function(){a(d,{infoWindow:j})})})}),e.replaceWith("<div></div>");var l=j.open;j.open=function(a,c){b(e.contents())(d),l.call(j,a,c)}}var f=d.getEventHandlers;return{restrict:"A",priority:100,scope:!1,link:e}}])}(),function(){angular.module("AngularGM").directive("gmMap",["$timeout",function(a){function b(b,c,d,e){if(angular.isDefined(b.gmCenter)||(b.center={}),angular.isDefined(b.gmBounds)||(b.bounds={}),!angular.isDefined(b.gmMapId))throw"angulargm must have non-empty gmMapId attribute";var f=!1,g=!1,h=!1,i=!1;d.hasOwnProperty("gmCenter")&&(f=!0),d.hasOwnProperty("gmZoom")&&(g=!0),d.hasOwnProperty("gmBounds")&&(h=!0),d.hasOwnProperty("gmMapTypeId")&&(i=!0);var j=function(){a(function(){(f||g||h||i)&&b.$apply(function(){if(f&&(b.gmCenter=e.center),g&&(b.gmZoom=e.zoom),h){var a=e.bounds;a&&(b.gmBounds=a)}i&&(b.gmMapTypeId=e.mapTypeId)})})};e.addMapListener("drag",j),e.addMapListener("zoom_changed",j),e.addMapListener("center_changed",j),e.addMapListener("bounds_changed",j),e.addMapListener("maptypeid_changed",j),e.addMapListener("resize",j),f&&b.$watch("gmCenter",function(a,b){var c=a!==b;if(c&&!e.dragging){var d=a;d&&(e.center=d)}},!0),g&&b.$watch("gmZoom",function(a,b){var c=null!=a&&!isNaN(a);c&&a!==b&&(e.zoom=a)}),h&&b.$watch("gmBounds",function(a,b){var c=a!==b;if(c&&!e.dragging){var d=a;d&&(e.bounds=d)}}),i&&b.$watch("gmMapTypeId",function(a,b){var c=a!==b;c&&a&&(e.mapTypeId=a)}),b.$on("gmMapResize",function(a,c){b.gmMapId()===c&&e.mapTrigger("resize")}),e.mapTrigger("resize")}return{restrict:"AE",priority:100,template:'<div><div id="" style="width:100%;height:100%;"></div><div ng-transclude></div></div>',transclude:!0,replace:!0,scope:{gmCenter:"=",gmZoom:"=",gmBounds:"=",gmMapTypeId:"=",gmMapOptions:"&",gmMapId:"&"},controller:"angulargmMapController",link:b}}])}(),function(){angular.module("AngularGM").directive("gmMarkers",["$log","$parse","$timeout","angulargmUtils",function(a,b,c,d){function e(a,b,e,h){if(!("gmObjects"in e))throw"gmObjects attribute required";if(!("gmGetLatLng"in e))throw"gmGetLatLng attribute required";var i=g(e),j=function(a,b){var g={};angular.forEach(b,function(b){var e=a.gmGetLatLng({object:b}),j=f(e);if(null!=j){var k=a.gmGetMarkerOptions({object:b}),l=d.createHash(j,h.precision);if(g[l]=b,!h.hasMarker(a.$id,e.lat,e.lng)){var m={};angular.extend(m,k,{position:j}),h.addMarker(a.$id,m);var n=h.getMarker(a.$id,e.lat,e.lng);angular.forEach(i,function(d,e){h.addListener(n,e,function(){c(function(){d(a.$parent.$parent,{object:b,marker:n})})})})}}});var j=[];h.forEachMarkerInScope(a.$id,function(a,b){b in g||j.push(b)}),angular.forEach(j,function(b){h.removeMarkerByHash(a.$id,b)}),a.$emit("gmMarkersUpdated",e.gmObjects)};a.$watch("gmObjects().length",function(b,c){null!=b&&b!==c&&j(a,a.gmObjects())}),a.$watch("gmObjects()",function(b,c){null!=b&&b!==c&&j(a,a.gmObjects())}),a.$watch("gmEvents()",function(b,d){null!=b&&b!==d&&angular.forEach(b,function(b){var d=b.event,e=b.locations;angular.forEach(e,function(b){var e=h.getMarker(a.$id,b.lat(),b.lng());null!=e&&c(angular.bind(this,h.trigger,e,d))})})}),a.$on("gmMarkersRedraw",function(b,c){(null==c||c===e.gmObjects)&&(j(a),j(a,a.gmObjects()))}),c(angular.bind(null,j,a,a.gmObjects()))}d.latLngEqual;var f=d.objToLatLng,g=d.getEventHandlers;return d.createHash,{restrict:"AE",priority:100,scope:{gmObjects:"&",gmGetLatLng:"&",gmGetMarkerOptions:"&",gmEvents:"&"},require:"^gmMap",link:e}}])}(),function(){angular.module("AngularGM").directive("gmPolylines",["$parse","$compile","$timeout","$log","angulargmUtils",function(a,b,c,d,e){function f(a,b,f,i){if(!("gmObjects"in f))throw"gmObjects attribute required";if(!("gmGetPath"in f))throw"gmGetPath attribute required";var j=h(f),k=function(a,b){var h={};angular.forEach(b,function(b){var f=a.gmGetPath({object:b}),k=[];angular.forEach(f,function(a){var b=g(a);return null===b?(d.warn("Unable to generate lat/lng from ",a),void 0):(k.push(b),void 0)});var l=e.createHash(k,i.precision),m=a.gmGetPolylineOptions({object:b});if(h[l]=b,!i.hasPolyline(a.$id,l)){var n={};angular.extend(n,m,{path:k}),i.addPolyline(a.$id,n);var o=i.getPolyline(a.$id,l);angular.forEach(j,function(d,e){i.addListener(o,e,function(){c(function(){d(a.$parent.$parent,{object:b,polyline:o})})})})}}),i.forEachPolylineInScope(a.$id,function(b,c){c in h||i.removePolylineByHash(a.$id,c)}),a.$emit("gmPolylinesUpdated",f.gmObjects)};a.$watch("gmObjects().length",function(b,c){null!=b&&b!==c&&k(a,a.gmObjects())}),a.$watch("gmObjects()",function(b,c){void 0!==b&&b!==c&&k(a,a.gmObjects())}),a.$on("gmPolylinesRedraw",function(b,c){(void 0===c||c===f.gmObjects)&&(k(a),k(a,a.gmObjects()))}),c(angular.bind(null,k,a,a.gmObjects()))}e.latLngEqual;var g=e.objToLatLng,h=e.getEventHandlers;return{restrict:"AE",priority:100,scope:{gmObjects:"&",gmGetPath:"&",gmGetPolylineOptions:"&"},require:"^gmMap",link:f}}])}(),function(){angular.module("AngularGM").factory("angulargmContainer",["$q",function(a){function b(a,b){if(!(b instanceof google.maps.Map))throw"map not a google.maps.Map: "+b;if(a in g)throw"already contain map with id "+a;g[a]=b,a in h&&h[a].resolve(b)}function c(a){return g[a]}function d(b){var c=h[b]||a.defer();return h[b]=c,c.promise}function e(a){a in g&&delete g[a],a in h&&delete h[a]}function f(){g={},h={}}var g={},h={};return{addMap:b,getMap:c,getMapPromise:d,removeMap:e,clear:f}}])}(),function(){angular.module("AngularGM").factory("angulargmUtils",["$parse",function(a){function b(a,b){return Math.abs(a-b)<1e-6}function c(a,c){return a instanceof google.maps.LatLng&&c instanceof google.maps.LatLng?b(a.lat(),c.lat())&&b(a.lng(),c.lng()):!1}function d(a,b){if(!(a instanceof google.maps.LatLngBounds&&b instanceof google.maps.LatLngBounds))return!1;var d=a.getSouthWest(),e=b.getSouthWest(),f=a.getNorthEast(),g=b.getNorthEast();return c(d,e)&&c(f,g)}function e(a){if(!(a instanceof google.maps.LatLng))throw"latLng not a google.maps.LatLng";return{lat:a.lat(),lng:a.lng()}}function f(a){if(null!=a){var b=a.lat,c=a.lng,d=!(null==b||null==c||isNaN(b)||isNaN(c));if(d)return new google.maps.LatLng(b,c)}return null}function g(a){if(!(a instanceof google.maps.LatLng))throw"latLng must be a google.maps.LatLng";var b=null==a.lat()||null==a.lng(),c=isNaN(a.lat())||isNaN(a.lng());return b||c}function h(b){var c={};return angular.forEach(b,function(b,d){if(0===d.lastIndexOf("gmOn",0)){var e=angular.lowercase(d.substring(4)),f=a(b);c[e]=f}}),c}function i(a,b){var c="";return a instanceof google.maps.LatLng?a.toUrlValue(b):(angular.forEach(a,function(a){c+=i(a,b)}),c)}return{latLngEqual:c,boundsEqual:d,latLngToObj:e,objToLatLng:f,hasNaN:g,getEventHandlers:h,createHash:i}}])}(),function(){angular.module("AngularGM").controller("angulargmMapController",["$scope","$element","angulargmUtils","angulargmDefaults","angulargmContainer",function(a,b,c,d,e){var f=c.latLngEqual,g=c.boundsEqual,h=c.hasNaN,i=d,j=e,k=function(a,b){var c=a.gmMapId();if(!c)throw"angulargm must have non-empty gmMapId attribute";var d=angular.element(b[0].firstChild);d.attr("id",c);var e=this._getConfig(a,i);this._map=this._createMap(c,d,e,j,a),this._markers={},this._polylines={},this._listeners=[],this.dragging=!1,Object.defineProperties(this,{precision:{value:i.precision,writeable:!1},center:{configurable:!0,get:function(){return this._map.getCenter()},set:function(a){if(h(a))throw"center contains null or NaN";var b=!f(this.center,a);b&&this._map.panTo(a)}},zoom:{configurable:!0,get:function(){return this._map.getZoom()},set:function(a){if(null==a||isNaN(a))throw"zoom was null or NaN";var b=this.zoom!==a;b&&this._map.setZoom(a)}},bounds:{configurable:!0,get:function(){return this._map.getBounds()},set:function(a){var b=!h(a.getSouthWest())&&!h(a.getNorthEast());if(!b)throw"bounds contains null or NaN";var c=!g(this.bounds,a);c&&this._map.fitBounds(a)}},mapTypeId:{configurable:!0,get:function(){return this._map.getMapTypeId()},set:function(a){if(null==a)throw"mapTypeId was null or unknown";var b=this.mapTypeId!==a;b&&this._map.setMapTypeId(a)}}}),this._initDragListeners(),a.$on("$destroy",angular.bind(this,this._destroy))};this._getConfig=function(a,b){var c=b.mapOptions,d={};return angular.extend(d,c,a.gmMapOptions()),d},this._createMap=function(a,b,c,d){var e=d.getMap(a);if(e){var f=e.getDiv();b.replaceWith(f),this._map=e,this.mapTrigger("resize"),e.setOptions(c)}else e=new google.maps.Map(b[0],c),d.addMap(a,e);return e},this._initDragListeners=function(){var a=this;this.addMapListener("dragstart",function(){a.dragging=!0}),this.addMapListener("idle",function(){a.dragging=!1}),this.addMapListener("drag",function(){a.dragging=!0})},this._destroy=function(){angular.forEach(this._listeners,function(a){google.maps.event.removeListener(a)});var a=Object.keys(this._markers),b=this;angular.forEach(a,function(a){b.forEachMarkerInScope(a,function(c,d){b.removeMarkerByHash(a,d)})})},this.addMapListener=function(a,b){var c=google.maps.event.addListener(this._map,a,b);this._listeners.push(c)},this.addMapListenerOnce=function(a,b){google.maps.event.addListenerOnce(this._map,a,b)},this.addListener=function(a,b,c){google.maps.event.addListener(a,b,c)},this.addListenerOnce=function(a,b,c){google.maps.event.addListenerOnce(a,b,c)},this.mapTrigger=function(a){google.maps.event.trigger(this._map,a)},this.trigger=function(a,b){google.maps.event.trigger(a,b)},this.addMarker=function(a,b){var c={};if(angular.extend(c,b),!(c.position instanceof google.maps.LatLng))throw"markerOptions did not contain a position";var e=new d.markerConstructor(c),f=e.getPosition();if(this.hasMarker(a,f.lat(),f.lng()))return!1;var g=f.toUrlValue(this.precision);return null==this._markers[a]&&(this._markers[a]={}),this._markers[a][g]=e,e.setMap(this._map),!0},this.hasMarker=function(a,b,c){return this.getMarker(a,b,c)instanceof google.maps.Marker},this.getMarker=function(a,b,c){if(null==b||null==c)throw"lat or lng was null";var d=new google.maps.LatLng(b,c),e=d.toUrlValue(this.precision);return null!=this._markers[a]&&e in this._markers[a]?this._markers[a][e]:null},this.removeMarker=function(a,b,c){if(null==b||null==c)throw"lat or lng was null";var d=new google.maps.LatLng(b,c),e=d.toUrlValue(this.precision);return this.removeMarkerByHash(a,e)},this.removeMarkerByHash=function(a,b){var c=!1,d=this._markers[a][b];return d&&(d.setMap(null),c=!0),this._markers[a][b]=null,delete this._markers[a][b],c},this.forEachMarker=function(a){if(null==a)throw"fn was null or undefined";var b=this,c=Object.keys(this._markers).reduce(function(a,c){return angular.forEach(b._markers[c],function(b){a.push(b)}),a},[]);angular.forEach(c,function(b,c){null!=b&&a(b,c)})},this.forEachMarkerInScope=function(a,b){if(null==b)throw"fn was null or undefined";angular.forEach(this._markers[a],function(a,c){null!=a&&b(a,c)})},this.addPolyline=function(a,b){var e=angular.extend({},b);if(!(!e.path instanceof Array||e.path.length<2)){angular.forEach(e.path,function(a){if(!(a instanceof google.maps.LatLng))throw"An element in polylineOptions was found to not be a valid position"});var f=c.createHash(b.path,this.precision);if(this.hasPolyline(a,f))return!1;var g=new d.polylineConstructor(e);return null==this._polylines[a]&&(this._polylines[a]={}),this._polylines[a][f]=g,g.setMap(this._map),!0}},this.getPolyline=function(a,b){if(null==b||""===b)throw"no hash passed to lookup";return null!=this._polylines[a]&&b in this._polylines[a]?this._polylines[a][b]:null},this.hasPolyline=function(a,b){return this.getPolyline(a,b)instanceof Object},this.forEachPolylineInScope=function(a,b){if(null==b)throw"fn was null or undefined";angular.forEach(this._polylines[a],function(a,c){null!=a&&b(a,c)})},this.forEachPolyline=function(a){if(null==a)throw"fn was null or undefined";angular.forEach(this._polylines,function(b){angular.forEach(b,function(b,c){null!=b&&a(b,c)})})},this.removePolylineByHash=function(a,b){var c=!1,d=this._polylines[a][b];return d&&(d.setMap(null),c=!0),this._polylines[a][b]=null,delete this._polylines[a][b],c},this.getMap=function(){return this._map},angular.bind(this,k)(a,b)}])}();